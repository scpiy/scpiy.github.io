I"O&<h2 id="使用python的opencv实现黑白图片与彩色图片的辨别">使用python的opencv实现黑白图片与彩色图片的辨别</h2>

<p>首先大概说一下实现逻辑。</p>

<p>一张正常的彩色图片，里面有各种颜色，他的RGB(不知道RGB的自行百度吧)三通道的值在色彩鲜艳的地方差距是很大的，而一张合格的黑白图片，也叫灰度图片，他如果使用RGB三通道，那么他的三个通道的值必定是相等的，即R=G=B，但是因为有很多黑白图片在其上方有一层或蓝或绿的四类蒙版的东西，所以不能严格按照这个标准来判断一张图片的身份</p>

<blockquote>
  <p>为啥说如果灰度图片采用RGB三通道呢，这是因为很多时候，我们去读取一章灰度图片，得到的只有一个通道，就是灰色通道，但opencv这个库，如果你不指定参数，他是不会给你按照灰度图片去读取的，所以，正常情况下opencv读取出来的灰色图片也至少有三个通道</p>

  <p>为啥说至少呢，因为有些图片格式，比如png，它不仅仅有RGB三个通道，还有一个叫做不透明度通道的通道，用过ps等图片编辑软件的同学大概知道这是个什么，我也不细说，你只要知道个别情况下他会多一个通道就好，这也不影响我们今天要做的事</p>
</blockquote>

<p>继续刚才的话题，不能按照R=G=B的标准，那该怎么办呢？</p>

<p>这个解决方案很久以前就有人想出来了，因为就算蒙上了一层带颜色的蒙版，这个蒙版的颜色也不会太重，不然就不是黑白图片了，我们可以利用这个机制，设置一个阈值，当一张图片的所有像素点的RGB三个通道的值相差都不超过这个阈值的时候，我们就认为这是一张灰度图片，按照前人的经验，这个阈值设置在50就很好用。</p>

<blockquote>
  <p>opencv库读取出来的通道的顺序不是现在常见的RGB，而是很多年以前的标准BGR，这个可以留意一下，虽然今天用不到就是了</p>
</blockquote>

<p>知道了上面这些，就很好办了，我先简单介绍几个opencv库的函数</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="c1">#这是opencv在python中的名字
</span><span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imdecode</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">fromfile</span><span class="p">(</span><span class="n">path_and_name</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="c1">#这是opencv读取一张图片的方式，看起来很麻烦对不对，因为这不是正常的方式，正常的方式是没法读取带有中文的文件名的文件的，至于具体原因我最后会说一下，你只要复制粘贴就好了
#path_and_name是图片的路径与名字
</span><span class="n">img</span><span class="p">.</span><span class="n">shape</span>
<span class="c1">#获取img对象的高、宽(以像素为单位)以及通道的数量
</span><span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span>
<span class="c1">#可以返回img对象i， j坐标上的像素点的各个通道的值
#但是又不知道这个通道数是几个，带不带不透明度通道，你是不是想到上面在img.shape那里获取到的通道数量了？使用判断语句进行判断当然是可以的，但实际上还有更简单的办法
</span><span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">num</span><span class="p">]</span>
<span class="c1">#根据num的值，返回对应的通道的值，0返回的就是B，1返回的就是G，2返回的就是R
</span></code></pre></div></div>

<p>就这么多，是不是很简单，当然很简单了。但要自己做还真的有不少坑。。</p>

<p>还有这个程序还需要依赖numpy模块，通过pip安装就好</p>

<blockquote>
  <p>numpy是为图片的读取提供支持</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="k">def</span> <span class="nf">indentify_picture</span><span class="p">():</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imdecode</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">fromfile</span><span class="p">(</span><span class="s">"G:</span><span class="se">\\</span><span class="s">picture</span><span class="se">\\</span><span class="s">test.jpg"</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="c1">#演示用，只展示识别的方法，真要写一个能用的程序的话我还用到了os(用于获取路径与文件名)和shutil(用于文件的复制)
</span>    <span class="c1">#这里不那么麻烦了，如果有想要相关代码的可以联系我
</span>    <span class="c1">#我也没有用"[4783]空の呼び声-64616604.jpg"这种文件名，只是为了方便
</span>    <span class="n">height</span><span class="p">,</span> <span class="n">wide</span><span class="p">,</span> <span class="n">gallery</span> <span class="o">=</span> <span class="n">img</span><span class="p">.</span><span class="n">shape</span>
    <span class="n">max_dif</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="c1">#定义BGR通道的值最大差值，如果最后这个差值大于50，就认为这是彩色图片
</span>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">height</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">wide</span><span class="p">):</span>
            <span class="c1">#遍历每一个像素点
</span>            <span class="n">v</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">1</span><span class="p">]),</span> <span class="nb">abs</span><span class="p">(</span><span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span><span class="o">-</span> <span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">2</span><span class="p">]),</span> <span class="nb">abs</span><span class="p">(</span><span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span><span class="o">-</span> <span class="n">img</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">2</span><span class="p">]))</span>
            <span class="c1">#找到每个像素点的最大差值
</span>            <span class="k">if</span> <span class="n">v</span> <span class="o">&gt;</span> <span class="n">max_dif</span><span class="p">:</span>
                <span class="n">max_dif</span> <span class="o">=</span> <span class="n">v</span>
            <span class="k">if</span> <span class="n">max_dif</span> <span class="o">&gt;</span> <span class="mi">50</span><span class="p">:</span>
                <span class="c1">#一旦某个像素点的差值大于50， 直接退出，
</span>                <span class="k">return</span> <span class="s">"这是一张彩色图片"</span>
    <span class="k">return</span> <span class="s">"这是一张灰度图片"</span>

<span class="k">print</span><span class="p">(</span><span class="n">indentify_picture</span><span class="p">())</span>
<span class="c1">#运行结果
</span><span class="n">temp</span><span class="o">&gt;</span> <span class="n">py</span><span class="p">.</span><span class="n">exe</span> <span class="p">.</span>\<span class="n">indetify_picture</span><span class="p">.</span><span class="n">py</span>
<span class="n">这是一张彩色图片</span>
</code></pre></div></div>

<p>emmmmm，那么今天就到这里了。</p>

<hr />

<p>感谢你的观看，希望能对你有帮助。</p>

<p>如果有自己解决不了的问题可以联系我。</p>
:ET